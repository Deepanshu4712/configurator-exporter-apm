# mysql logging mapping
mysql:
  error:
    source:
      '@type': tail
      path: '/var/log/mysql/error.log, /var/log/mysql/mysql-error.log'
      read_from_head: true
      pos_file: '/var/log/td-agent/mysql-error.pos'
      refresh_interval: 2s
      format: 'multi_format'
      time_format: '%Y-%m-%d %H:%M:%S'
      multi_format_patterns:
       - '<pattern>'
       - 'format /(?<time>[^ ]* [^ ]*)\s*\[(?<level>\S+)\]\s(?<message>.*)$/'
       - '</pattern>'
       - '<pattern>'
       - 'format /(?<time>[^ ]* [^ ]*)\s*(?<message>.*)$/'
       - '</pattern>'
    filter:
      node: '#{Socket.gethostname}'
      time: ${require 'time'; time.to_time.to_f}
      file: '${tag_suffix[1]}'
      _plugin: 'mysql'
      _documentType: 'error'
    match:
      flush_interval: 120s

  general-query:
    source:
      '@type': tail
      format: 'multi_format'
      path: '/var/log/mysql/mysql.log, /var/log/mysql.log'
      read_from_head: true
      pos_file: '/var/log/td-agent/mysql-general-query.pos'
      refresh_interval: 2s
      multi_format_patterns:
       - '<pattern>'
       - 'format /\"(?<time>[^\]]*)\"\W+(?<user1>\S+)\W+(?<user2>\w+)\W+(?<host>\w+)\W+(?<IP>(\d+\.\d+\.\d+\.\d+))\W+(?<pid1>\d+)\W+(?<pid2>\d+)\W+(?<command_type>.\w*)\W+(?<argument>.*)\"/'
       - '</pattern>'
       - '<pattern>'
       - 'format /\"(?<time>[^\]]*)\"\W+(?<user1>\S+)\W+(?<user2>\w+)\W+(?<host>\w+)\W+(?<pid1>\d+)\W+(?<pid2>\d+)\W+(?<command_type>.\w*)\W+(?<argument>.*)\"/'
       - '</pattern>'
    time_format: '%Y-%m-%d %H:%M:%S'
    keep_time_key: 'true'
    filter:
      node: '#{Socket.gethostname}'
      time: ${require 'time'; time.to_time.to_f}
      file: '${tag_suffix[1]}'
      _plugin: 'mysql'
      _documentType: 'general-query'
    match:
      flush_interval: 60s

  slow-query:
    source:
      '@type': mysql_slow_query
      path: '/var/log/mysql/mysql-slow.log'
    filter:
      node: '#{Socket.gethostname}'
      time: ${require 'time'; time.to_time.to_f}
      file: '${tag_suffix[1]}'
      _plugin: 'mysql'
      _documentType: 'slow-query'
    match:
      flush_interval: 60s

# apache logging mapping
apache:
  error:
     source:
       '@type': tail
       format: apache_error
       keep_time_key: 'true'
       path: '/var/log/apache2/error.log, /var/log/httpd/error_log'
       read_from_head: true
       pos_file: '/var/log/td-agent/apache_error.pos'
       refresh_interval: 2s
     filter:
       node: '#{Socket.gethostname}'
#       time: '#{Time.now.to_f}'
       file: '${tag_suffix[1]}'
       _plugin: 'apache'
       _documentType: 'error'
       time: ${require 'time'; time.to_time.to_f}
     match:
       flush_interval: 60s
  access:
     source:
       '@type': tail
       format: '/^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$/'
       time_format: '%d/%b/%Y:%H:%M:%S %z'
       keep_time_key: 'true'
       path: '/var/log/apache2/access.log, /var/log/httpd/access_log'
       read_from_head: true
       pos_file: '/var/log/td-agent/apache_access.pos'
       refresh_interval: 2s
     filter:
       node: '#{Socket.gethostname}'
#       time: '#{Time.now.to_f}'
       file: '${tag_suffix[1]}'
       _plugin: 'apache'
       _documentType: 'access'
       time: ${require 'time'; time.to_time.to_f}
     match:
       flush_interval: 60s

# libvirt log mapping
#libvirt:
#  source:
#    '@type': tail
#    path: '/var/log/libvirt/libvitd.log, /var/log/libvirt/*/*.log'
#    read_from_head: true
#    pos_file: '/var/log/td-agent/libvritd.pos'
#    refresh_interval: 2s
#  filter:
#    node: '#{Socket.gethostname}'
#    time: '#{Time.now.to_f}'
#    file: '${tag_suffix[1]}'
#  match:
#    flush_interval: 120s

# syslog mapping
linux:
  syslog:
    source:
#      '@type': syslog
      '@type': tail
      format: syslog
      keep_time_key: 'true'
      path: '/var/log/syslog'
      pos_file: '/var/log/td-agent/syslog.pos'
      read_from_head: 'true'
      refresh_interval: 2s
    filter:
      node: '#{Socket.gethostname}'
#      time: '#{Time.now.to_f}'
      _plugin: 'linux'
      _documentType: 'syslog'
      file: '${tag_suffix[1]}'
      time: ${require 'time'; time.to_time.to_f}
    match:
      flush_interval: 30s

default_flush_interval: 60s